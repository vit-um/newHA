telegram_control:

    automation:

    # ## –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–µ–Ω—é
    #   - id: –í—ã–∑–æ–≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
    #     alias: telegram_menu_start
    #     initial_state: true
    #     trigger:
    #       - platform: event
    #         event_type: telegram_command
    #         event_data:
    #           command: '/go'
    #     condition:
    #       - condition: state
    #         entity_id: switch.control_mode
    #         state: 'on'
    #     action:
    #       - service: telegram_bot.send_message
    #         data:
    #           target: "{{ trigger.event.data.user_id }}"
    #           message: |
    #             {{'\U0001F527'}} –í—ã–±—Ä–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è :
    #           inline_keyboard: 
    #           - '{{''\U0001F6B6''}} –í—Ö–æ–¥:/en_control , {{''\U0001F6C0''}} –°–∞–Ω—É–∑–µ–ª:/bt_control'
    #           - '{{''\U0001F3E2''}} –ì–æ—Å—Ç–∏–Ω–∞—è:/lr_control , {{''\U0001F374''}} –ö—É—Ö–Ω—è:/kn_control'
    #           - '{{''\U0001F6B9''}} –î–µ—Ç—Å–∫–∞—è –î:/dd_control , {{''\U0001F6BA''}} –î–µ—Ç—Å–∫–∞—è –ê:/da_control'
    #           - '{{''\U0001F6AB''}} –£–±—Ä–∞—Ç—å –º–µ–Ω—é:/menu_hide'

    # ## –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
      - id: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
        alias: telegram_menu_control
        initial_state: true
        trigger:
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/menu_hide'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}' 
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/menu_back'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: "{{ trigger.event.data.chat_id }}"
                      message: |
                        {{'\U0001F527'}} *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–º–Ω—ã–º –¥–æ–º–æ–º*
                        * *
                        {{'\U0001F4BB'}} *CPU* - {{ states('sensor.processor_use') }} %, {{'\U0001F321'}} - {{ states('sensor.processor_temperature') }} ¬∞C
                      inline_keyboard: 
                      - '{{''\U00002328''}} –¢–µ–ª–µ–º–µ—Ç—Ä–∏—è:/telemetry'
                      - '{{''\U0001F6B6''}} –í—Ö–æ–¥:/en_control , {{''\U0001F6C0''}} –°–∞–Ω—É–∑–µ–ª:/bt_control'
                      - '{{''\U0001F3E2''}} –ì–æ—Å—Ç–∏–Ω–∞—è:/lr_control , {{''\U0001F374''}} –ö—É—Ö–Ω—è:/kn_control'
                      - '{{''\U0001F6B9''}} –î–µ—Ç—Å–∫–∞—è –î:/dd_control , {{''\U0001F6BA''}} –î–µ—Ç—Å–∫–∞—è –ê:/da_control'
                      - '{{''\U0001F6AB''}} –£–±—Ä–∞—Ç—å –º–µ–Ω—é:/menu_hide'


    ## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏—Ö–æ–∂–∞—è, –∫–æ—Ä–∏–¥–æ—Ä
      - id: –ü—Ä–∏—Ö–æ–∂–∞—è –∏ –∫–æ—Ä–∏–¥–æ—Ä –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
        alias: telegram_en_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/en_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_en |
                        {{'\U0001F6B6'}} *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏—Ö–æ–∂–∞—è, –∫–æ—Ä–∏–¥–æ—Ä :*
                        {{'\U0001F6AA'}} –í—Ö–æ–¥–Ω–∞—è –¥–≤–µ—Ä—å - {% if is_state('binary_sensor.0x00158d000119378d_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–∞ {% else %} –ó–∞–∫—Ä—ã—Ç–∞ {% endif %}
                        {{'\U0001F6AD'}} –î–∞—Ç—á–∏–∫ –¥—ã–º–∞ - {% if is_state('binary_sensor.0x00158d000149d28b_smoke', 'on') %} {{'\U000026A0'}} *–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ* {% else %} {{'\U0001F197'}} {% endif %}
                        *–ü—Ä–∏—Ö–æ–∂–∞—è :*
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.0x00158d00013f7894_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %} 
                        {{'\U0001F321'}} - {{ states('sensor.0x54ef44100001b68d_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0x54ef44100001b68d_humidity') }} %
                        *–ö–æ—Ä–∏–¥–æ—Ä :*
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.0x00158d00010f8920_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %}
                        {{'\U0001F321'}} - {{ states('sensor.0x00124b0022659c04_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0x00124b0022659c04_humidity') }} %
                      inline_keyboard: &keyb_en
                        - '{{''\U0001F4A1''}} –õ–∞–º–ø–æ—á–∫–∞ - {% if is_state(''light.0x00158d0003e74c31'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_en_bulb_light , {{''\U0001F4A1''}} –õ—é—Å—Ç—Ä–∞ - {% if is_state(''light.cr_ceiling_light'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_cr_ceiling_light'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/en_control' 
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_en_bulb_light'' }}'
                sequence:
                  - service: light.toggle
                    entity_id: light.0x00158d0003e74c31
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ–∞–º–ø–æ—á–∫–∞ –≤ –ø—Ä–∏—Ö–æ–∂–µ–π - {% if is_state('light.0x00158d0003e74c31', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %} 
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_en
                      inline_keyboard: *keyb_en
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_cr_ceiling_light'' }}'
                sequence:
                  - service: input_button.press
                    target:
                        entity_id: input_button.cr_ceiling_light
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ –∫–æ—Ä–∏–¥–æ—Ä - {% if is_state('light.cr_ceiling_light', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_en
                      inline_keyboard: *keyb_en

    ## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–Ω—É–∑–µ–ª
      - id: –¢—É–∞–ª–µ—Ç, –ø—Ä–∞—á–µ—á–Ω–∞—è, –≤–∞–Ω–Ω–∞—è –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
        alias: telegram_bt_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/bt_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_bt |
                        {{'\U0001F6C0'}} –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É–∞–ª–µ—Ç, –ø—Ä–∞—á–µ—á–Ω–∞—è, –≤–∞–Ω–Ω–∞—è :
                        –¢—É–∞–ª–µ—Ç - 
                        {{'\U0001F321'}} - {{ states('sensor.0xec1bbdfffe6f3394_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0xec1bbdfffe6f3394_humidity') }} %
                        –ü—Ä–∞—á–µ—á–Ω–∞—è -
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.0x00158d0001e16204_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %}
                        {{'\U0001F321'}} - {{ states('sensor.0xec1bbdfffe8d6ac9_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0xec1bbdfffe8d6ac9_humidity') }} %
                        –í–∞–Ω–Ω–∞—è -
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.0x00158d0001e547a3_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %} {{'\U0001F6AA'}} –î–≤–µ—Ä—å - {% if is_state('binary_sensor.0x00158d00054495dc_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–∞ {% else %} –ó–∞–∫—Ä—ã—Ç–∞ {% endif %}
                        {{'\U0001F6B1'}} - –†–∞–∫–æ–≤–∏–Ω–∞ - {% if is_state('binary_sensor.0x00158d0001d72fa2_water_leak', 'on') %} –ü—Ä–æ—Ç–µ—á–∫–∞ {% else %} –°—É—Ö–æ {% endif %} {{'\U0001F6B1'}} - –î—É—à–µ–≤–∞—è - {% if is_state('binary_sensor.0x00158d0001bb60c2_water_leak', 'on') %} –ü—Ä–æ—Ç–µ—á–∫–∞ {% else %} –°—É—Ö–æ {% endif %}
                        {{'\U0001F321'}} - {{ states('sensor.0x00158d0001dcd47e_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0x00158d0001dcd47e_humidity') }} %
                      inline_keyboard: &keyb_bt
                        - '{{''\U0001F4A1''}} –¢—É–∞–ª–µ—Ç - {% if is_state(''light.tt_ceiling_virtual'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_tt_ceiling_light , {{''\U0001F4A1''}} –ü—Ä–∞—á–µ—á–Ω–∞—è - {% if is_state(''light.0x00158d00014a1a55'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_ln_ceiling_light'
                        - '{{''\U0001F4A1''}} –í–∞–Ω–Ω–∞—è - {% if is_state(''light.bt_ceiling_light'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_bt_ceiling_light , {{''\U0001F300''}} –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä - {% if is_state(''switch.0x00158d0001117040_left'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_bt_fan'
                        - '{{''\U00002668''}} –ù–∞–≥—Ä–µ–≤ –≤–æ–¥—ã - {% if is_state(''switch.heater_mode'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_bt_boiler_mode , {{''\U0001F50C''}} –ë–æ–π–ª–µ—Ä - {% if is_state(''switch.0x00158d0003584401'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_bt_boiler'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/bt_control' 
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_tt_ceiling_light'' }}'
                sequence:
                  - service: light.toggle
                    entity_id: light.tt_ceiling_virtual
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ —Ç—É–∞–ª–µ—Ç - {% if is_state('light.tt_ceiling_virtual', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_bt
                      inline_keyboard: *keyb_bt
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_ln_ceiling_light'' }}'
                sequence:
                  - service: input_button.press
                    target:
                        entity_id: input_button.ln_light
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ –ø—Ä–∞—á–µ—á–Ω–∞—è - {% if is_state('light.0x00158d00014a1a55', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_bt
                      inline_keyboard: *keyb_bt
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_bt_ceiling_light'' }}'
                sequence:
                  - service: input_button.press
                    target:
                        entity_id: input_button.bt_ceiling_light
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ –≤–∞–Ω–Ω–∞—è - {% if is_state('light.bt_ceiling_light', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_bt
                      inline_keyboard: *keyb_bt
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_bt_fan'' }}'
                sequence:
                  - service: switch.toggle
                    entity_id: switch.0x00158d0001117040_left
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä –≤–∞–Ω–Ω–∞—è - {% if is_state('switch.0x00158d0001117040_left', 'on') %} –í–∫–ª—é—á–µ–Ω {% else %} –í—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_bt
                      inline_keyboard: *keyb_bt
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_bt_boiler_mode'' }}'
                sequence:
                  - service: switch.toggle
                    entity_id: switch.heater_mode
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –†–µ–∂–∏–º –Ω–∞–≥—Ä–µ–≤–∞ –≤–æ–¥—ã - {% if is_state('switch.heater_mode', 'on') %} –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% else %} –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% endif %}
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_bt
                      inline_keyboard: *keyb_bt
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_bt_boiler'' }}'
                sequence:
                  - service: switch.toggle
                    entity_id: switch.0x00158d0003584401
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ë–æ–π–ª–µ—Ä –≤–∞–Ω–Ω–∞—è - {% if is_state('switch.0x00158d0003584401', 'on') %} –í–∫–ª—é—á–µ–Ω {% else %} –í—ã–∫–ª—é—á–µ–Ω {% endif %}
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_bt
                      inline_keyboard: *keyb_bt
                        
    ## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Å—Ç–∏–Ω–æ–π
      - id: –ì–æ—Å—Ç–∏–Ω–∞—è –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
        alias: telegram_lr_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/lr_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_lr |
                        {{'\U0001F3E2'}} –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Å—Ç–∏–Ω–æ–π :
                        –ì–æ—Å—Ç–∏–Ω–∞—è -
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.0x00158d0005414857_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %} {{'\U0001F9D1'}} - {% if is_state('binary_sensor.0x54ef44100042e226_presence', 'on') %} –ö—Ç–æ-—Ç–æ –µ—Å—Ç—å {% else %} –ù–∏–∫–æ–≥–æ –Ω–µ—Ç {% endif %}
                        {{'\U0001FA9F'}} 1 - {% if is_state('binary_sensor.0x00158d00013ed373_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–æ {% else %} –ó–∞–∫—Ä—ã—Ç–æ {% endif %}  {{'\U0001FA9F'}} 2 - {% if is_state('binary_sensor.0xec1bbdfffedf6a6a_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–æ {% else %} –ó–∞–∫—Ä—ã—Ç–æ {% endif %} 
                        {{'\U0001F321'}} - {{ states('sensor.0x00158d00015aebb6_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0x00158d00015aebb6_humidity') }} %
                        –ë–∞–ª–∫–æ–Ω -
                        {{'\U0001F6AA'}} - {% if is_state('binary_sensor.0x00158d000445206b_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–∞ {% else %} –ó–∞–∫—Ä—ã—Ç–∞ {% endif %} 
                      inline_keyboard: &keyb_lr
                        - '{{''\U0001F525''}} –û—Ç–æ–ø–ª–µ–Ω–∏–µ - {% if is_state(''switch.lr_radiator_mode'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_lr_heat'
                        - '{{''\U0001F4A1''}} –õ—é—Å—Ç—Ä–∞ 1 - {% if is_state(''light.lr_ceiling_light_1'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_lr_ceiling_light_1 , {{''\U0001F4A1''}} –õ—é—Å—Ç—Ä–∞ 2 - {% if is_state(''light.lr_ceiling_light_2'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_lr_ceiling_light_2'
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç –Ω–∞ —Å—Ç–µ–Ω–µ - {% if is_state(''light.0x00158d00015723f1_left'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_0x00158d00015723f1_left , {{''\U0001F4A1''}} –ù–∞—Å—Ç–æ–ª—å–Ω–∞—è - {% if is_state(''light.lr_table_lamp'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_lr_table_lamp'
                        - '{{''\U0001F4FA''}} –¢–µ–ª–µ–≤–∏–∑–æ—Ä - {% if is_state(''binary_sensor.lr_tv_work'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_lr_tv_work , {{''\U0001F39E''}} –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∫–∏–Ω–æ - {% if is_state(''light.lr_light_cinema'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_lr_light_cinema'
                        - '{{''\U0001F4A1''}} –õ—é—Å—Ç—Ä–∞ –Ω–∞ –±–∞–ª–∫–æ–Ω–µ - {% if is_state(''light.lr_balcony_light_virtual'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_lr_balcony_ceiling_light'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/lr_control' 
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_lr_heat'' }}'
                sequence:              
                  - service: switch.toggle
                    entity_id: switch.lr_radiator_mode
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –†–µ–∂–∏–º –æ—Ç–æ–ø–ª–µ–Ω–∏—è - {% if is_state('switch.lr_radiator_mode', 'on') %} –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% else %} –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% endif %}
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_lr_ceiling_light_1'' }}'
                sequence:              
                  - service: input_button.press
                    target:
                        entity_id: input_button.lr_ceiling_1
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ 1 - {% if is_state('light.lr_ceiling_light_1', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_lr_ceiling_light_2'' }}'
                sequence:              
                  - service: input_button.press
                    target:
                        entity_id: input_button.lr_ceiling_2
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ 2 - {% if is_state('light.lr_ceiling_light_2', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_0x00158d00015723f1_left'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.0x00158d00015723f1_left
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç–∏–ª—å–Ω–∏–∫ –Ω–∞ —Å—Ç–µ–Ω–µ - {% if is_state('light.0x00158d00015723f1_left', 'on') %} –í–∫–ª—é—á–µ–Ω {% else %} –í—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_lr_table_lamp'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.lr_table_lamp
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ù–∞—Å—Ç–æ–ª—å–Ω–∞—è –ª–∞–º–ø–∞ - {% if is_state('light.lr_table_lamp', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_lr_tv_work'' }}'
                sequence:              
                  - service: input_button.press
                    target:
                        entity_id: input_button.lr_tv_control
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_lr_light_cinema'' }}'
                sequence:              
                  - service: light.toggle
                    target:
                        entity_id: light.lr_light_cinema
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –¥–ª—è –∫–∏–Ω–æ - {% if is_state('light.lr_light_cinema', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_lr_balcony_ceiling_light'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.lr_balcony_light_virtual
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ –Ω–∞ –±–∞–ª–∫–æ–Ω–µ - {% if is_state('light.lr_balcony_light_virtual', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr                        
    ## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ö–Ω–µ–π
      - id: –ö—É—Ö–Ω—è –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
        alias: telegram_kn_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/kn_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_kn |
                        {{'\U0001F374'}} –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ö–Ω–µ–π :
                        –ö—É—Ö–Ω—è -
                        {{'\U0001F6B1'}} - –†–∞–∫–æ–≤–∏–Ω–∞ - {% if is_state('binary_sensor.0xec1bbdfffe8f1e42_water_leak', 'on') %} –ü—Ä–æ—Ç–µ—á–∫–∞ {% else %} –°—É—Ö–æ {% endif %} 
                        {{'\U0001F9D1'}} - {% if is_state('binary_sensor.kn_occupancy', 'on') %} –ö—Ç–æ-—Ç–æ –µ—Å—Ç—å {% else %} –ù–∏–∫–æ–≥–æ –Ω–µ—Ç {% endif %} {{'\U0001FA9F'}} - {% if is_state('binary_sensor.0x00158d0001a99562_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–æ {% else %} –ó–∞–∫—Ä—ã—Ç–æ {% endif %} 
                        {{'\U0001F321'}} - {{ states('sensor.0x00158d0001581109_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0x00158d0001581109_humidity') }} %
                        –ë–∞–ª–∫–æ–Ω -
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.0xec1bbdfffe302df1_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %}
                        {{'\U0001F6AA'}} - {% if is_state('binary_sensor.0x00158d0001a20885_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–∞ {% else %} –ó–∞–∫—Ä—ã—Ç–∞ {% endif %} {{'\U0001FA9F'}} - {% if is_state('binary_sensor.0x00158d0001a4a394_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–æ {% else %} –ó–∞–∫—Ä—ã—Ç–æ {% endif %} 
                      inline_keyboard: &keyb_kn
                        - '{{''\U0001F525''}} –û—Ç–æ–ø–ª–µ–Ω–∏–µ  - {% if is_state(''switch.kn_radiator_mode'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kn_heat , {{''\U00002668''}} –ù–∞–≥—Ä–µ–≤ –≤–æ–¥—ã - {% if is_state(''switch.kn_boiler_mode'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kn_boiler_mode'
                        - '{{''\U0001F4A1''}} –õ—é—Å—Ç—Ä–∞ - {% if is_state(''light.kn_ceiling_light'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kn_ceiling_light , {{''\U0001F4FA''}} –¢–µ–ª–µ–≤–∏–∑–æ—Ä - {% if is_state(''binary_sensor.kn_tv_work'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kn_tv_work'
                        - '{{''\U0001F50C''}} –ë–æ–π–ª–µ—Ä - {% if is_state(''switch.0x00158d0001d35bc0'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kn_boiler'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/kn_control' 
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kn_heat'' }}'
                sequence:              
                  - service: switch.toggle
                    entity_id: switch.kn_radiator_mode
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –†–µ–∂–∏–º –æ—Ç–æ–ø–ª–µ–Ω–∏—è - {% if is_state('switch.kn_radiator_mode', 'on') %} –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% else %} –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% endif %}
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kn
                      inline_keyboard: *keyb_kn
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kn_boiler_mode'' }}'
                sequence:              
                  - service: switch.toggle
                    entity_id: switch.kn_boiler_mode
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –†–µ–∂–∏–º –Ω–∞–≥—Ä–µ–≤–∞ –≤–æ–¥—ã - {% if is_state('switch.kn_boiler_mode', 'on') %} –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% else %} –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% endif %}
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kn
                      inline_keyboard: *keyb_kn
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kn_ceiling_light'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.kn_ceiling_virtual
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ - {% if is_state('light.kn_ceiling_virtual', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kn
                      inline_keyboard: *keyb_kn
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kn_tv_work'' }}'
                sequence:              
                  - service: input_button.press
                    target:
                        entity_id: input_button.kn_tv_control
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kn
                      inline_keyboard: *keyb_kn
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kn_boiler'' }}'
                sequence:              
                  - service: switch.toggle
                    entity_id: switch.0x00158d0001d35bc0
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ë–æ–π–ª–µ—Ä - {% if is_state('switch.0x00158d0001d35bc0', 'on') %} –í–∫–ª—é—á–µ–Ω {% else %} –í—ã–∫–ª—é—á–µ–Ω {% endif %}
                      show_alert: true                          
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kn
                      inline_keyboard: *keyb_kn

    ## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –î–µ—Ç—Å–∫–æ–π –î
      - id: –î–µ—Ç—Å–∫–∞—è –î –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
        alias: telegram_dd_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/dd_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_dd |
                        {{'\U0001F6B9'}} –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –î–µ—Ç—Å–∫–æ–π –î :
                        –î–µ—Ç—Å–∫–∞—è –î -
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.0x00158d0001a66222_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %} {{'\U0001FA9F'}} - {% if is_state('binary_sensor.0x00158d0001193697_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–æ {% else %} –ó–∞–∫—Ä—ã—Ç–æ {% endif %}
                        {{'\U0001F321'}} - {{ states('sensor.0x00158d000156e92e_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0x00158d000156e92e_humidity') }} %
                        –ë–∞–ª–∫–æ–Ω -
                        {{'\U0001F6AA'}} - {% if is_state('binary_sensor.0x00158d00015843d4_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–∞ {% else %} –ó–∞–∫—Ä—ã—Ç–∞ {% endif %} 
                        {{'\U0001FA9F'}} 1 - {% if is_state('binary_sensor.0x00158d0001a65b68_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–æ {% else %} –ó–∞–∫—Ä—ã—Ç–æ {% endif %}  {{'\U0001FA9F'}} 2 - {% if is_state('binary_sensor.0xec1bbdfffe3a653e_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–æ {% else %} –ó–∞–∫—Ä—ã—Ç–æ {% endif %} 
                        {{'\U0001F321'}} - {{ states('sensor.0x00158d0001fa8321_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0x00158d0001fa8321_humidity') }} %
                      inline_keyboard: &keyb_dd
                        - '{{''\U0001F525''}} –û—Ç–æ–ø–ª–µ–Ω–∏–µ - {% if is_state(''switch.dd_radiator_mode'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_dd_heat , {{''\U0001F327''}} –£–≤–ª–∞–∂–Ω–µ–Ω–∏–µ - {% if is_state(''switch.dd_humidifier_mode'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_dd_humidifier_mode'
                        - '{{''\U0001F4A1''}} –õ—é—Å—Ç—Ä–∞ - {% if is_state(''light.dd_ceiling_light'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_dd_ceiling_light , {{''\U0001F4A1''}} –ë—Ä–∞ - {% if is_state(''light.0x00158d000420dbab'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_dd_bra'
                        - '{{''\U0001F4A1''}} –ê–¥—Ä–µ—Å–Ω–∞—è –ª–µ–Ω—Ç–∞ - {% if is_state(''light.dd_wled_light'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_dd_wled_light , {{''\U0001F4A1''}} –ù–∞—Å—Ç–æ–ª—å–Ω–∞—è - {% if is_state(''light.dd_table_lamp'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_dd_table_lamp'
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç –Ω–∞ –±–∞–ª–∫–æ–Ω–µ - {% if is_state(''light.0x680ae2fffe71ae63'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_dd_balcony_light '
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/dd_control' 
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_dd_heat'' }}'
                sequence:              
                  - service: switch.toggle
                    entity_id: switch.dd_radiator_mode
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –†–µ–∂–∏–º –æ—Ç–æ–ø–ª–µ–Ω–∏—è - {% if is_state('switch.dd_radiator_mode', 'on') %} –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% else %} –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% endif %}
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_dd
                      inline_keyboard: *keyb_dd
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_dd_humidifier_mode'' }}'
                sequence:              
                  - service: switch.toggle
                    entity_id: switch.dd_humidifier_mode
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –†–µ–∂–∏–º —É–≤–ª–∞–∂–Ω–µ–Ω–∏—è - {% if is_state('switch.dd_humidifier_mode', 'on') %} –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% else %} –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% endif %} 
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_dd
                      inline_keyboard: *keyb_dd
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_dd_ceiling_light'' }}'
                sequence:              
                  - service: input_button.press
                    target:
                        entity_id: input_button.dd_ceiling_light
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ - {% if is_state('light.dd_ceiling_light', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_dd
                      inline_keyboard: *keyb_dd
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_dd_bra'' }}'
                sequence:              
                  - service: input_button.press
                    target:
                        entity_id: input_button.0x00158d000420dbab
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ë—Ä–∞ - {% if is_state('light.0x00158d000420dbab', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_dd
                      inline_keyboard: *keyb_dd
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_dd_wled_light'' }}'
                sequence:              
                  - service: input_button.press
                    target:
                        entity_id: input_button.dd_wled_light
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ê–¥—Ä–µ—Å–Ω–∞—è –ª–µ–Ω—Ç–∞ - {% if is_state('light.dd_wled_light', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_dd
                      inline_keyboard: *keyb_dd
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_dd_table_lamp'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.dd_table_lamp
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –Ω–∞—Å—Ç–æ–ª—å–Ω—É—é –ª–∞–º–ø—É
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_dd
                      inline_keyboard: *keyb_dd 
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_dd_balcony_light'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.0x680ae2fffe71ae63
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ë—Ä–∞ - {% if is_state('light.0x680ae2fffe71ae63', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_dd
                      inline_keyboard: *keyb_dd 
                      
    ## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –î–µ—Ç—Å–∫–æ–π –ê
      - id: –î–µ—Ç—Å–∫–∞—è –ê –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
        alias: telegram_da_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/da_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_da |
                        {{'\U0001F6B9'}} –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –î–µ—Ç—Å–∫–æ–π –ê :
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.0x00158d00016d56f5_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %} {{'\U0001FA9F'}} - {% if is_state('binary_sensor.0x00158d0001583c7b_contact', 'on') %} –û—Ç–∫—Ä—ã—Ç–æ {% else %} –ó–∞–∫—Ä—ã—Ç–æ {% endif %}
                        {{'\U0001F321'}} - {{ states('sensor.0x00158d000159c7e6_temperature') }} ¬∞C, {{'\U0001F4A7'}} - {{ states('sensor.0x00158d000159c7e6_humidity') }} %
                      inline_keyboard: &keyb_da
                        - '{{''\U0001F525''}} –û—Ç–æ–ø–ª–µ–Ω–∏–µ - {% if is_state(''switch.da_radiator_mode'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_da_heat , {{''\U0001F327''}} –£–≤–ª–∞–∂–Ω–µ–Ω–∏–µ - {% if is_state(''switch.da_humidifier_mode'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_da_humidifier_mode'
                        - '{{''\U0001F4A1''}} –õ—é—Å—Ç—Ä–∞ - {% if is_state(''light.da_ceiling_light'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_da_ceiling_light , {{''\U0001F31F''}} –ü—Ä–æ–µ–∫—Ç–æ—Ä - {% if is_state(''light.da_projector'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_da_projector'
                        - '{{''\U0001F4A1''}} LED –ª–µ–Ω—Ç–∞ - {% if is_state(''light.da_led_strip'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_da_led_strip , {{''\U0001F4A1''}} –ù–∞—Å—Ç–æ–ª—å–Ω–∞—è - {% if is_state(''light.smart_desk_lamp'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_da_table_lamp'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/da_control'
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_da_heat'' }}'
                sequence:              
                  - service: switch.toggle
                    entity_id: switch.da_radiator_mode
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –†–µ–∂–∏–º –æ—Ç–æ–ø–ª–µ–Ω–∏—è - {% if is_state('switch.da_radiator_mode', 'on') %} –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% else %} –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% endif %}
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_da
                      inline_keyboard: *keyb_da
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_da_humidifier_mode'' }}'
                sequence:              
                  - service: switch.toggle
                    entity_id: switch.da_humidifier_mode
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –†–µ–∂–∏–º —É–≤–ª–∞–∂–Ω–µ–Ω–∏—è - {% if is_state('switch.da_humidifier_mode', 'on') %} –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% else %} –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {% endif %} 
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_da
                      inline_keyboard: *keyb_da
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_da_ceiling_light'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.da_ceiling_light
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ—é—Å—Ç—Ä–∞ - {% if is_state('light.da_ceiling_light', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_da
                      inline_keyboard: *keyb_da
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_da_projector'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.da_projector
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ü—Ä–æ–µ–∫—Ç–æ—Ä - {% if is_state('light.da_projector', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_da
                      inline_keyboard: *keyb_da 
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_da_led_strip'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.da_led_strip
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} LED –ª–µ–Ω—Ç–∞ - {% if is_state('light.da_led_strip', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_da
                      inline_keyboard: *keyb_da
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_da_table_lamp'' }}'
                sequence:              
                  - service: light.toggle
                    entity_id: light.smart_desk_lamp
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ù–∞—Å—Ç–æ–ª—å–Ω–∞—è –ª–∞–º–ø–∞ - {% if is_state('light.smart_desk_lamp', 'on') %} –í–∫–ª—é—á–µ–Ω–∞ {% else %} –í—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_da
                      inline_keyboard: *keyb_da 
                      
                      
                      
                      