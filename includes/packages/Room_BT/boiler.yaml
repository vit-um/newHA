bolier:

    recorder:
      include:
        entities:
           - switch.0x00158d0003584401
           - sensor.0x00158d0003584401_power
           
    homeassistant:
      customize:
        
        switch.0x00158d0003584401:
          friendly_name: Ванная бойлер
          icon: mdi:power-socket-eu
        sensor.0x00158d0003584401_power:
          friendly_name: Ванная бойлер, мощность
          unit_of_measurement: Вт
          device_class: power
        sensor.0x00158d0003584401_energy:
          friendly_name: Ванная бойлер, энергия
          icon: mdi:chart-line
        sensor.0x00158d0003584401_device_temperature:
          friendly_name: Ванная бойлер, температура
          icon: mdi:thermometer-check

        automation.bt_boiler_on:
          friendly_name: Ванная - включение бойлера
          icon: mdi:water-boiler

        automation.bt_boiler_impossible:
          friendly_name: Ванная - проверка корректности включения бойлера
          icon: mdi:water-boiler-alert

        automation.bt_boiler_timer_double:
          friendly_name: Ванная - дублирование таймера на резервном сервере
          icon: mdi:timer-refresh

        automation.bt_boiler_off:
          friendly_name: Ванная - выключение бойлера
          icon: mdi:water-boiler-off

        automation.bt_boiler_notify_off:
          friendly_name: Ванная - уведомление при выключении бойлера
          icon: mdi:message-alert

        automation.bt_boiler_1_on_mqtt_save:
          friendly_name: Ванная - сохранение периода 1 бойлера
          icon: mdi:numeric-1-box-multiple

        automation.bt_boiler_1_on_mqtt_sync:
          friendly_name: Ванная - синхронизация периода 1 бойлера
          icon: mdi:numeric-1-box-multiple-outline

        automation.bt_boiler_2_on_mqtt_save:
          friendly_name: Ванная - сохранение периода 2 бойлера
          icon: mdi:numeric-3-box-multiple
          
        automation.bt_boiler_2_on_mqtt_sync:
          friendly_name: Ванная - синхронизация периода 2 бойлера
          icon: mdi:numeric-2-box-multiple-outline
          
        automation.bt_boiler_3_on_mqtt_save:
          friendly_name: Ванная - сохранение периода 3 бойлера
          icon: mdi:numeric-3-box-multiple
          
        automation.bt_boiler_3_on_mqtt_sync:
          friendly_name: Ванная - синхронизация периода 3 бойлера
          icon: mdi:numeric-3-box-multiple-outline

        automation.bt_boiler_timer_on_mqtt_save:
          friendly_name: Ванная - сохранение таймера бойлера
          icon: mdi:timer-plus

        automation.bt_boiler_timer_on_mqtt_sync:
          friendly_name: Ванная - синхронизация таймера бойлера
          icon: mdi:timer-sync

        automation.bt_boiler_power_update:
          friendly_name: Ванная - обновление мощности бойлера
          icon: mdi:update
        
    input_datetime:
      bt_boiler_1:
        name: Бойлер ванная - 1 период
        has_date: false
        has_time: true
        
      bt_boiler_2:
        name: Бойлер ванная - 2 период
        has_date: false
        has_time: true
        
      bt_boiler_3:
        name: Бойлер ванная - 3 период
        has_date: false
        has_time: true

      bt_boiler_timer:
        name: Бойлер ванная - длительность работы
        has_date: false
        has_time: true

    mqtt:
      binary_sensor:
        - name: bt_boiler_mode
          state_topic: "states/water_heater"


      sensor:
        - name: bt_boiler_1_on_mqtt
          state_topic: "states/period/bt_boiler_1"

        - name: bt_boiler_2_on_mqtt
          state_topic: "states/period/bt_boiler_2"
          
        - name: bt_boiler_3_on_mqtt
          state_topic: "states/period/bt_boiler_3"

        - name: bt_boiler_timer_on_mqtt
          state_topic: "states/timer/bt_boiler"

    timer:

        bt_boiler:
          name: Бойлер ванная - 
          restore: true
        
    switch:
    
      - platform: template
        switches:

          bt_boiler_mode:
            friendly_name: "Режим нагрева бойлера"
            value_template: "{{ is_state('binary_sensor.bt_boiler_mode', 'on') }}"
            turn_on:
              service: mqtt.publish
              data_template:
                topic: "states/water_heater"
                payload_template: 'ON'
                retain: true 
            turn_off:
              service: mqtt.publish
              data_template:
                topic: "states/water_heater"
                payload_template: 'OFF'
                retain: true 
            icon_template: >-
              {% if is_state('switch.bt_boiler_mode', 'on') %}
                mdi:water-boiler
              {% else %}
                mdi:water-boiler-off
              {% endif %}

    # template:
     
    #   - binary_sensor:

    # # Сенсор активности бойлера с устранением паразитных срабатываний
    #       - name: bt_boiler_active
    #         state: >
    #           {{ is_state('switch.0x00158d0003584401', 'on')  
    #           }}
    #         delay_on: 00:00:01
    #         delay_off: 00:00:01
    #         device_class: running

              
    automation:

      - alias: bt_boiler_on
        description: Ванная - включение бойлера
        initial_state: true
        trigger:    
         - platform: time
           at: input_datetime.bt_boiler_1
         - platform: time
           at: input_datetime.bt_boiler_2
         - platform: time
           at: input_datetime.bt_boiler_3
        condition:
         - condition: state
           entity_id: switch.0x00158d0003584401
           state: 'off'
         - condition: state
           entity_id: binary_sensor.bt_boiler_mode
           state: 'on'
         - condition: state
           entity_id: switch.control_mode
           state: 'on'
        action:
         - service: switch.turn_on
           entity_id: switch.0x00158d0003584401

      - alias: bt_boiler_impossible
        description: Ванная - проверка корректности включения бойлера
        initial_state: true
        trigger:
         - platform: state
           entity_id: switch.0x00158d0003584401
           from: 'off'    
           to: 'on'
        condition:
         - condition: state
           entity_id: switch.control_mode
           state: 'on'
        action:
            - choose:
    # Разрешенное включение
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.bt_boiler_mode
                    state: 'on'
                sequence:
                  - service: timer.start
                    entity_id: timer.bt_boiler
                    data_template: 
                        duration: >
                              {{strptime(states("input_datetime.bt_boiler_timer"), "%H:%M:%S").time()}}
                  - service: telegram_bot.send_message
                    data_template:
                      target:
                          - !secret chat_id_group_tech
                      message: | 
                          {{"\U00002714"}} Включение бойлера в ванной. Время события - {{ states.sensor.time_date.state }}
    # Случайное включение
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.bt_boiler_mode
                    state: 'off'
                sequence:
                  - service: switch.turn_off
                    entity_id: switch.0x00158d0003584401
                  - service: telegram_bot.send_message
                    data_template:
                      target:
                         - !secret chat_id_group_tech
                      message: | 
                          {{"\U0001F6AB"}} Включение бойлера в ванной, отключен режим нагрева воды. Время события - {{ states.sensor.time_date.state }}


      - alias: bt_boiler_timer_double
        description: Ванная - дублирование таймера на резервном сервере
        initial_state: true
        trigger:
         - platform: state
           entity_id: switch.0x00158d0003584401
           from: 'on'
           to: 'off'
         - platform: state
           entity_id: switch.0x00158d0003584401
           from: 'off'
           to: 'on'
        condition:
    # Работает на выключенном сервере!!!
         - condition: state
           entity_id: switch.control_mode
           state: 'off'
        action:
            - choose:
    # Выключение таймера
              - conditions:
                  - condition: state
                    entity_id: switch.0x00158d0003584401
                    state: 'on'
                sequence:
                  - service: timer.start
                    entity_id: timer.bt_boiler
                    data_template: 
                        duration: >
                              {{strptime(states("input_datetime.bt_boiler_timer"), "%H:%M:%S").time()}}
    # Отмена таймера
              - conditions:
                  - condition: state
                    entity_id: switch.0x00158d0003584401
                    state: 'off'
                sequence:
                  - service: timer.cancel
                    entity_id: timer.bt_boiler

      - alias: bt_boiler_off
        description: Ванная - выключение бойлера
        initial_state: true
        trigger:    
         - platform: state
           entity_id: binary_sensor.bt_boiler_mode
           from: 'on'
           to: 'off'
         - platform: event
           event_type: timer.finished
           event_data:
             entity_id: timer.bt_boiler
        condition:
         - condition: state
           entity_id: switch.0x00158d0003584401
           state: 'on'
         - condition: state
           entity_id: switch.control_mode
           state: 'on'
        action:
         - service: switch.turn_off
           entity_id: switch.0x00158d0003584401

      - alias: bt_boiler_notify_off
        description: Ванная - уведомление при выключении бойлера
        initial_state: true
        trigger:
         - platform: state
           entity_id: binary_sensor.bt_boiler_active
           from: 'on'
           to: 'off'
        condition:
         - condition: state
           entity_id: switch.control_mode
           state: 'on'
         - condition: state
           entity_id: binary_sensor.bt_boiler_mode
           state: 'on'
        action:
         - service: timer.cancel
           entity_id: timer.bt_boiler
         - service: telegram_bot.send_message
           data_template:
             target:
                 - !secret chat_id_group_tech
             message: | 
                  {{"\U00002716"}} Выключение бойлера в ванной. Время события - {{ states.sensor.time_date.state }}
         - delay: 00:00:10                  
         - service: mqtt.publish
           data_template:
             topic: "zigstar_poe/BT boiler/get"
             payload_template: '{"power": ""}'  

      - alias: bt_boiler_1_on_mqtt_save
        description: Ванная - сохранение периода 1 бойлера
        initial_state: true
        trigger:    
         - platform: state
           entity_id: input_datetime.bt_boiler_1
        action:
            - choose:
    # Сервер активен
              - conditions:
                  - condition: state
                    entity_id: switch.control_mode
                    state: 'on'
                sequence:
                  - service: mqtt.publish
                    data_template:
                      topic: "states/period/bt_boiler_1"
                      payload_template: "{{states('input_datetime.bt_boiler_1')}}"
                      retain: true 
    # Сервер неактивен
              - conditions:
                  - condition: state
                    entity_id: switch.control_mode
                    state: 'off'
                sequence:
                  - service: input_datetime.set_datetime
                    target:
                     entity_id: input_datetime.bt_boiler_1
                    data:
                      time: "{{states('sensor.bt_boiler_1_on_mqtt')}}"

      - alias: bt_boiler_1_on_mqtt_sync
        description: Ванная - синхронизация периода 1 бойлера
        initial_state: true
        trigger:    
        - platform: state
          entity_id: sensor.bt_boiler_1_on_mqtt
        condition:
          - condition: template
            value_template: "{{states('input_datetime.bt_boiler_1') != states('sensor.bt_boiler_1_on_mqtt')}}"
        action:
          - service: input_datetime.set_datetime
            target:
             entity_id: input_datetime.bt_boiler_1
            data:
              time: "{{states('sensor.bt_boiler_1_on_mqtt')}}"

      - alias: bt_boiler_2_on_mqtt_save
        description: Ванная - сохранение периода 2 бойлера
        initial_state: true
        trigger:    
         - platform: state
           entity_id: input_datetime.bt_boiler_2
        action:
            - choose:
    # Сервер активен
              - conditions:
                  - condition: state
                    entity_id: switch.control_mode
                    state: 'on'
                sequence:
                  - service: mqtt.publish
                    data_template:
                      topic: "states/period/bt_boiler_2"
                      payload_template: "{{states('input_datetime.bt_boiler_2')}}"
                      retain: true 
    # Сервер неактивен
              - conditions:
                  - condition: state
                    entity_id: switch.control_mode
                    state: 'off'
                sequence:
                  - service: input_datetime.set_datetime
                    target:
                     entity_id: input_datetime.bt_boiler_2
                    data:
                      time: "{{states('sensor.bt_boiler_2_on_mqtt')}}"

      - alias: bt_boiler_2_on_mqtt_sync
        description: Ванная - синхронизация периода 2 бойлера
        initial_state: true
        trigger:    
        - platform: state
          entity_id: sensor.bt_boiler_2_on_mqtt
        condition:
          - condition: template
            value_template: "{{states('input_datetime.bt_boiler_2') != states('sensor.bt_boiler_2_on_mqtt')}}"
        action:
          - service: input_datetime.set_datetime
            target:
             entity_id: input_datetime.bt_boiler_2
            data:
              time: "{{states('sensor.bt_boiler_2_on_mqtt')}}"
              
      - alias: bt_boiler_3_on_mqtt_save
        description: Ванная - сохранение периода 3 бойлера
        initial_state: true
        trigger:    
         - platform: state
           entity_id: input_datetime.bt_boiler_3
        action:
            - choose:
    # Сервер активен
              - conditions:
                  - condition: state
                    entity_id: switch.control_mode
                    state: 'on'
                sequence:
                  - service: mqtt.publish
                    data_template:
                      topic: "states/period/bt_boiler_3"
                      payload_template: "{{states('input_datetime.bt_boiler_3')}}"
                      retain: true 
    # Сервер неактивен
              - conditions:
                  - condition: state
                    entity_id: switch.control_mode
                    state: 'off'
                sequence:
                  - service: input_datetime.set_datetime
                    target:
                     entity_id: input_datetime.bt_boiler_3
                    data:
                      time: "{{states('sensor.bt_boiler_3_on_mqtt')}}"

      - alias: bt_boiler_3_on_mqtt_sync
        description: Ванная - синхронизация периода 3 бойлера
        initial_state: true
        trigger:    
        - platform: state
          entity_id: sensor.bt_boiler_3_on_mqtt
        condition:
          - condition: template
            value_template: "{{states('input_datetime.bt_boiler_3') != states('sensor.bt_boiler_3_on_mqtt')}}"
        action:
          - service: input_datetime.set_datetime
            target:
             entity_id: input_datetime.bt_boiler3
            data:
              time: "{{states('sensor.bt_boiler_3_on_mqtt')}}"

      - alias: bt_boiler_timer_on_mqtt_save
        description: Ванная - сохранение таймера бойлера
        initial_state: true
        trigger:    
         - platform: state
           entity_id: input_datetime.bt_boiler_timer
        action:
            - choose:
    # Сервер активен
              - conditions:
                  - condition: state
                    entity_id: switch.control_mode
                    state: 'on'
                sequence:
                  - service: mqtt.publish
                    data_template:
                      topic: "states/timer/bt_boiler"
                      payload_template: "{{states('input_datetime.bt_boiler_timer')}}"
                      retain: true 
    # Сервер неактивен
              - conditions:
                  - condition: state
                    entity_id: switch.control_mode
                    state: 'off'
                sequence:
                  - service: input_datetime.set_datetime
                    target:
                     entity_id: input_datetime.bt_boiler_timer
                    data:
                      time: "{{states('sensor.bt_boiler_timer_on_mqtt')}}"

      - alias: bt_boiler_timer_on_mqtt_sync
        description: Ванная - синхронизация таймера бойлера
        initial_state: true
        trigger:    
        - platform: state
          entity_id: sensor.bt_boiler_timer_on_mqtt
        condition:
          - condition: template
            value_template: "{{states('input_datetime.bt_boiler_timer') != states('sensor.bt_boiler_timer_on_mqtt')}}"
        action:
          - service: input_datetime.set_datetime
            target:
             entity_id: input_datetime.bt_boiler_timer
            data:
              time: "{{states('sensor.bt_boiler_timer_on_mqtt')}}"
              
    #   - alias: bt_boiler_power_update
    #     description: Ванная - обновление мощности бойлера
    #     initial_state: true
    #     trigger:
    #       - platform: time_pattern
    #         seconds: "/15"
    #     condition:
    #      - condition: state
    #       entity_id: switch.control_mode
    #       state: 'on'
    #      - condition: state
    #       entity_id: switch.0x00158d0003584401
    #       state: 'on'
    #     action:
    #      - service: mqtt.publish
    #       data_template:
    #          topic: "zigstar_poe/BT boiler/get"
    #          payload_template: '{"power": ""}'   
